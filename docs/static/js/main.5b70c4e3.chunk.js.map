{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","state","setstate","className","onLoad","src","alt","GifGrid","loading","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdrB,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAgBdM,GAhBc,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,MAAWV,GAAU,EAAdS,GAAc,EAAVT,KAAU,EACvBhB,mBAAS,YADc,mBAC1C8B,EAD0C,KACnCC,EADmC,KAOjD,OACE,yBAAKC,UAAU,8CACb,yBACEA,UAAWF,GAAS,YACpBG,OARe,WACnBF,EAAS,KAQLG,IAAKlB,EACLmB,IAAKT,IAENI,GACC,yBAAKE,UAAU,WACb,uBAAGA,UAAU,wCCfVI,EAAU,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNgB,SAAS,IAH6B,mBACjCP,EADiC,KAC1BC,EAD0B,KAexC,OATAO,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACC,GACtBT,EAAS,CACPV,KAAMmB,EACNH,SAAS,SAGZ,CAACvB,IAEGgB,EDb2BW,CAAa3B,GAAjCa,EADyB,EAC/BN,KAAcgB,EADiB,EACjBA,QAItB,OACE,oCACE,wBAAIL,UAAU,gDACXlB,GAEFuB,GAAW,0CACZ,yBAAKL,UAAU,YACZL,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEb3BmB,EAAe,WAAO,IAAD,EACI3C,mBAAS,CAAC,KADd,mBACzB4C,EADyB,KACb7C,EADa,KAGhC,OACE,oCACE,4BACE,yBAAKiC,UAAU,OAAOE,IAAI,mBAAmBC,IAAI,SADnD,gBAIA,kBAAC,EAAD,CAAapC,cAAeA,IAC5B,6BACA,yBAAKiC,UAAU,kBACb,wBAAIA,UAAU,oBACXY,EAAWrB,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAAS4B,IAAK5B,EAAUA,SAAUA,WCb9C+B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.5b70c4e3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue, ...cats]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' value={inputValue} onChange={handleChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=5mbd3UPV69H4cJSoqQr3IQjYHAdEfdfK`;\n\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React, { useState } from 'react';\n\nexport const GifGridItem = ({ title, id, url }) => {\n  const [state, setstate] = useState('Cargando');\n\n  const handleOnload = () => {\n    setstate('');\n  };\n\n  return (\n    <div className='card animate__animated animate__fadeInDown'>\n      <img\n        className={state && 'imgHidden'}\n        onLoad={handleOnload}\n        src={url}\n        alt={title}\n      />\n      {state && (\n        <div className='loading'>\n          <i className='fa fa-circle-notch fa-spin fa-3x' />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  // useFetchGifs es un custome hook en la carpeta helpers\n\n  return (\n    <>\n      <h3 className='h3cardGrid animate__animated animate__fadeIn'>\n        {category}\n      </h3>\n      {loading && <p>Cargando...</p>}\n      <div className='cardGrid'>\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setstate({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState(['']);\n\n  return (\n    <>\n      <h2>\n        <img className='logo' src='./images/gif.png' alt='logo' />\n        GifExpertApp\n      </h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <div className='gridsContainer'>\n        <ol className='olGridsContainer'>\n          {categories.map((category) => (\n            <GifGrid key={category} category={category} />\n          ))}\n        </ol>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}